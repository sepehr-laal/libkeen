CMAKE_MINIMUM_REQUIRED( VERSION 2.8 FATAL_ERROR )

PROJECT( libmetrics )

SET( LIBMETRICS_ROOT "${CMAKE_CURRENT_SOURCE_DIR}" CACHE PATH   "root directory" )
SET( LIBMETRICS_DEPS "${LIBMETRICS_ROOT}/deps" CACHE PATH  "dependencies directory" )
SET( LIBMETRICS_TESTS "${LIBMETRICS_ROOT}/tests" CACHE PATH  "unit tests directory" )
SET( LIBMETRICS_SOURCE  "${LIBMETRICS_ROOT}/source"  CACHE PATH "sources directory" )
SET( LIBMETRICS_INCLUDE "${LIBMETRICS_ROOT}/include" CACHE PATH "include directory" )

ADD_DEFINITIONS( -DASIO_STANDALONE )
IF( MSVC )
  ADD_DEFINITIONS(
    -DVC_EXTRALEAN
    -DWINVER=0x0601
    -D_WIN32_WINNT=0x0601
    -DWIN32_LEAN_AND_MEAN
    -D_CRT_SECURE_NO_WARNINGS
	/wd4996 )
  SET(CMAKE_EXE_LINKER_FLAGS_DEBUG
    "${CMAKE_EXE_LINKER_FLAGS_DEBUG} /NODEFAULTLIB:MSVCRT")
ENDIF()

ADD_DEFINITIONS(
  -DCURL_STATICLIB
  -DSQLITE_THREADSAFE=3 )

SET( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH}
  "${LIBMETRICS_ROOT}/tools/share/cmake" )
INCLUDE( FindLibCURL REQUIRED )

INCLUDE_DIRECTORIES(
  "${LIBMETRICS_DEPS}/asio/asio/include"
  "${LIBMETRICS_DEPS}/sqlite"
  "${LIBMETRICS_SOURCE}"
  "${LIBMETRICS_INCLUDE}"
  "${LibCURL_INCLUDE_DIR}"
)

SET( LIBMETRICS_SOURCES
  "${LIBMETRICS_SOURCE}/fwd.hpp"
  "${LIBMETRICS_SOURCE}/scoped.hpp"
  "${LIBMETRICS_SOURCE}/scoped.cpp"
  "${LIBMETRICS_SOURCE}/logger.hpp"
  "${LIBMETRICS_SOURCE}/logger.cpp"
  "${LIBMETRICS_SOURCE}/curl.hpp"
  "${LIBMETRICS_SOURCE}/curl.cpp"
  "${LIBMETRICS_SOURCE}/core.hpp"
  "${LIBMETRICS_SOURCE}/core.cpp"
  "${LIBMETRICS_SOURCE}/cache.hpp"
  "${LIBMETRICS_SOURCE}/cache.cpp" )

ADD_LIBRARY(
  libkeen.static STATIC
  ${LIBMETRICS_SOURCES}
  "${LIBMETRICS_DEPS}/sqlite/sqlite3.c" )

ADD_LIBRARY(
  libkeen SHARED
  "${LIBMETRICS_INCLUDE}/keen.h"
  "${LIBMETRICS_SOURCE}/keen.h.cpp" )

TARGET_LINK_LIBRARIES(
  libkeen libkeen.static ${LibCURL_LIBRARY} )
TARGET_COMPILE_DEFINITIONS(
  libkeen PUBLIC LIBMETRICS_BUILD_DLL )

#ENABLE_TESTING(ON)
#ADD_SUBDIRECTORY( ${LIBMETRICS_TESTS} )
